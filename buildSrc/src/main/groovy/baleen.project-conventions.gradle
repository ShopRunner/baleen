plugins {
    id("org.jetbrains.dokka")
    id("de.marcphilipp.nexus-publish")
    id("kotlin")
    id("org.jmailen.kotlinter")
    id("signing")
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation(platform("org.junit:junit-bom:5.7.0"))

    implementation("org.jetbrains.kotlin:kotlin-stdlib")
    testImplementation("org.assertj:assertj-core:3.18.1")

    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

test {
    useJUnitPlatform()
}

task sourceJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from dokkaJavadoc
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)

            from components.java

            artifact sourceJar
            artifact javadocJar
        }
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Library for Validating Legacy Data'
            name 'Baleen'
            url 'https://github.com/ShopRunner/baleen'
            organization {
                name 'com.shoprunner'
                url 'https://github.com/ShopRunner'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/ShopRunner/baleen/issues'
            }
            licenses {
                license {
                    name 'BSD 3-Clause "New" or "Revised" License'
                    url 'https://github.com/ShopRunner/baleen/blob/master/LICENSE.txt'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/ShopRunner/baleen'
                connection 'scm:git:git://github.com/ShopRunner/baleen.git'
                developerConnection 'scm:git:ssh://git@github.com:ShopRunner/baleen.git'
            }
            developers {
                developer {
                    name 'Shoprunner'
                }
            }
        }
    }
}

plugins {
    id "org.jetbrains.dokka" version "0.9.17" apply false
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.30' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.3.30' apply false
//    id 'org.jmailen.kotlinter' version '1.23.1' apply false
}

apply plugin: 'idea'

subprojects {
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'maven-publish'
    //apply plugin: 'org.jmailen.kotlinter'
    apply plugin: 'signing'

    repositories {
        mavenCentral()
        maven { url "https://dl.bintray.com/soywiz/soywiz" }
    }

    signing {
        sign publishing.publications
    }

//    test {
//        useJUnitPlatform()
//    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                customizePom(pom)

//                from components.java
//
//                artifact sourceJar
//                artifact javadocJar
            }
        }
        repositories {
            maven {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }
}

project(":baleen") {
    apply plugin: 'kotlin-multiplatform'



    kotlin {
        jvm() {



            task javadocJar(type: Jar) {
                archiveClassifier = 'javadoc'
//                from dokka
            }

            artifacts {
                archives javadocJar
            }


//            model {
//                tasks.generatePomFileForMavenJavaPublication {
//                    destination = file("$buildDir/generated-pom.xml")
//                }
//            }
        }

        js()

        sourceSets {
            commonMain {
                dependencies {
                    implementation kotlin("stdlib-common")
                }
            }

            jvm().compilations.main.defaultSourceSet {
                dependencies {
                    implementation kotlin('stdlib-jdk8')
                }
            }
            jvm().compilations.test.defaultSourceSet {
                dependencies {
                    implementation 'org.assertj:assertj-core:3.9.1'
                    implementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
                    //runtime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
                }
            }

            js().compilations.main.defaultSourceSet {
                dependencies {
                    implementation kotlin('stdlib-js')
                }
            }
        }
    }


    publishing {
        publications {
            mavenJava(MavenPublication) {
                customizePom(pom)

//                from components.java
//
//                artifact sourceJar
//                artifact javadocJar
            }
        }
        repositories {
            maven {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }
}

// Non-multiplatform projects
configure(subprojects.findAll {it.name != 'baleen'}) {
    apply plugin: 'kotlin'

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        testImplementation 'org.assertj:assertj-core:3.9.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }
}


def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Library for Validating Legacy Data'
            name 'Baleen'
            url 'https://github.com/ShopRunner/baleen'
            organization {
                name 'com.shoprunner'
                url 'https://github.com/ShopRunner'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/ShopRunner/baleen/issues'
            }
            licenses {
                license {
                    name 'BSD 3-Clause "New" or "Revised" License'
                    url 'https://github.com/ShopRunner/baleen/blob/master/LICENSE.txt'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/ShopRunner/baleen'
                connection 'scm:git:git://github.com/ShopRunner/baleen.git'
                developerConnection 'scm:git:ssh://git@github.com:ShopRunner/baleen.git'
            }
            developers {
                developer {
                    name 'Shoprunner'
                }
            }
        }
    }
}